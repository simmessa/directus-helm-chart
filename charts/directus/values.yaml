# Default values for directus.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: directus/directus 
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "9.5.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

extraEnvVars: {}
  # An array to add extra environment variables
  # E.g.
  # extraEnvVars:
  #  - name: STORAGE_LOCATIONS
  #    value: "s3"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  enabled: true

#BACKUP
  # enabled: true
  # global:
  #   postgresql:
  #     auth:
  #       postgresPassword: "ostiano"
  # primary:
  #   ## Enable persistence using Persistent Volume Claims
  #   ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  #   ##
  #   persistence:
  #     ## Name of existing PVC to hold MariaDB Primary data
  #     ## NOTE: When it's set the rest of persistence parameters are ignored
  #     ##
  #     existingClaim: directus-db-postgre-pvc
  #   # extraEnvVars:
  #   # # pw of postgres user
  #   # - name: POSTGRESQL_USERNAME
  #   #   value: "dir_user"
  #   # - name: POSTGRESQL_PASSWORD
  #   #   value: "dir_password"
  #   # - name: POSTGRESQL_DATABASE
  #   #   value: "my_database"

  # # auth:
  # #   database: my_database
  #   # username: "dir_user"
  #   # password: "dir_password"
#EO BACKUP

  # global:
  #   ## @param global.imageRegistry Global Docker image registry
  #   ##
  #   imageRegistry: ""
  #   ## @param global.imagePullSecrets Global Docker registry secret names as an array
  #   ## e.g.
  #   ## imagePullSecrets:
  #   ##   - myRegistryKeySecretName
  #   ##
  #   imagePullSecrets: []
  #   ## @param global.storageClass Global StorageClass for Persistent Volume(s)
  #   ##
  #   storageClass: ""
  #   postgresql:
  #     ## @param global.postgresql.auth.postgresPassword Password for the "postgres" admin user (overrides `auth.postgresPassword`)
  #     ## @param global.postgresql.auth.username Name for a custom user to create (overrides `auth.username`)
  #     ## @param global.postgresql.auth.password Password for the custom user to create (overrides `auth.password`)
  #     ## @param global.postgresql.auth.database Name for a custom database to create (overrides `auth.database`)
  #     ## @param global.postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials (overrides `auth.existingSecret`).
  #     ## @param global.postgresql.auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.adminPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
  #     ## @param global.postgresql.auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.userPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
  #     ## @param global.postgresql.auth.secretKeys.replicationPasswordKey Name of key in existing secret to use for PostgreSQL credentials (overrides `auth.secretKeys.replicationPasswordKey`). Only used when `global.postgresql.auth.existingSecret` is set.
  #     ##
  #     auth:
  #       postgresPassword: ""
  #       username: ""
  #       password: ""
  #       database: ""
  #       existingSecret: ""
  #       secretKeys:
  #         adminPasswordKey: ""
  #         userPasswordKey: ""
  #         replicationPasswordKey: ""
  #     ## @param global.postgresql.service.ports.postgresql PostgreSQL service port (overrides `service.ports.postgresql`)
  #     ##
  #     service:
  #       ports:
  #         postgresql: ""

  # ## @section Common parameters
  # ##

  # ## @param kubeVersion Override Kubernetes version
  # ##
  # kubeVersion: ""
  # ## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)
  # ##
  # nameOverride: ""
  # ## @param fullnameOverride String to fully override common.names.fullname template
  # ##
  # fullnameOverride: ""
  # ## @param clusterDomain Kubernetes Cluster Domain
  # ##
  # clusterDomain: cluster.local
  # ## @param extraDeploy Array of extra objects to deploy with the release (evaluated as a template)
  # ##
  # extraDeploy: []
  # ## @param commonLabels Add labels to all the deployed resources
  # ##
  # commonLabels: {}
  # ## @param commonAnnotations Add annotations to all the deployed resources
  # ##
  # commonAnnotations: {}
  # ## Enable diagnostic mode in the statefulset
  # ##
  # diagnosticMode:
  #   ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  #   ##
  #   enabled: false
  #   ## @param diagnosticMode.command Command to override all containers in the statefulset
  #   ##
  #   command:
  #     - sleep
  #   ## @param diagnosticMode.args Args to override all containers in the statefulset
  #   ##
  #   args:
  #     - infinity

  ## @section PostgreSQL common parameters
  ##

  ## Bitnami PostgreSQL image version
  ## ref: https://hub.docker.com/r/bitnami/postgresql/tags/
  ## @param image.registry PostgreSQL image registry
  ## @param image.repository PostgreSQL image repository
  ## @param image.tag PostgreSQL image tag (immutable tags are recommended)
  ## @param image.digest PostgreSQL image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param image.pullPolicy PostgreSQL image pull policy
  ## @param image.pullSecrets Specify image pull secrets
  ## @param image.debug Specify if debug values should be set
  ##
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 15.2.0-debian-11-r5
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## Example:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Set to true if you would like to see extra information on logs
    ##
    debug: false
  ## Authentication parameters
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#setting-the-root-password-on-first-run
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#creating-a-database-on-first-run
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#creating-a-database-user-on-first-run
  ##
  auth:
    ## @param auth.enablePostgresUser Assign a password to the "postgres" admin user. Otherwise, remote access will be blocked for this user
    ##
    enablePostgresUser: true
    ## @param auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` is provided
    ##
    postgresPassword: ""
    ## @param auth.username Name for a custom user to create
    ##
    username: ""
    ## @param auth.password Password for the custom user to create. Ignored if `auth.existingSecret` is provided
    ##
    password: ""
    ## @param auth.database Name for a custom database to create
    ##
    database: ""
    ## @param auth.replicationUsername Name of the replication user
    ##
    replicationUsername: repl_user
    ## @param auth.replicationPassword Password for the replication user. Ignored if `auth.existingSecret` is provided
    ##
    replicationPassword: ""
    ## @param auth.existingSecret Name of existing secret to use for PostgreSQL credentials. `auth.postgresPassword`, `auth.password`, and `auth.replicationPassword` will be ignored and picked up from this secret. The secret might also contains the key `ldap-password` if LDAP is enabled. `ldap.bind_password` will be ignored and picked from this secret in this case.
    ##
    existingSecret: ""
    ## @param auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
    ## @param auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
    ## @param auth.secretKeys.replicationPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
    ##
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password
      replicationPasswordKey: replication-password
    ## @param auth.usePasswordFiles Mount credentials as a files instead of using an environment variable
    ##
    usePasswordFiles: false
  ## @param architecture PostgreSQL architecture (`standalone` or `replication`)
  ##
  architecture: standalone
  ## Replication configuration
  ## Ignored if `architecture` is `standalone`
  ##

  containerPorts:
    postgresql: 5432
  ## Audit settings
  ## https://github.com/bitnami/containers/tree/main/bitnami/postgresql#auditing
  ## @param audit.logHostname Log client hostnames
  ## @param audit.logConnections Add client log-in operations to the log file
  ## @param audit.logDisconnections Add client log-outs operations to the log file
  ## @param audit.pgAuditLog Add operations to log using the pgAudit extension
  ## @param audit.pgAuditLogCatalog Log catalog using pgAudit
  ## @param audit.clientMinMessages Message log level to share with the user
  ## @param audit.logLinePrefix Template for log line prefix (default if not set)
  ## @param audit.logTimezone Timezone for the log timestamps
  ##
  audit:
    logHostname: false
    logConnections: false
    logDisconnections: false
    pgAuditLog: ""
    pgAuditLogCatalog: "off"
    clientMinMessages: error
    logLinePrefix: ""
    logTimezone: ""
  ## LDAP configuration
  ## @param ldap.enabled Enable LDAP support
  ## DEPRECATED ldap.url It will removed in a future, please use 'ldap.uri' instead
  ## @param ldap.server IP address or name of the LDAP server.
  ## @param ldap.port Port number on the LDAP server to connect to
  ## @param ldap.prefix String to prepend to the user name when forming the DN to bind
  ## @param ldap.suffix String to append to the user name when forming the DN to bind
  ## DEPRECATED ldap.baseDN It will removed in a future, please use 'ldap.basedn' instead
  ## DEPRECATED ldap.bindDN It will removed in a future, please use 'ldap.binddn' instead
  ## DEPRECATED ldap.bind_password It will removed in a future, please use 'ldap.bindpw' instead
  ## @param ldap.basedn Root DN to begin the search for the user in
  ## @param ldap.binddn DN of user to bind to LDAP
  ## @param ldap.bindpw Password for the user to bind to LDAP
  ## DEPRECATED ldap.search_attr It will removed in a future, please use 'ldap.searchAttribute' instead
  ## DEPRECATED ldap.search_filter It will removed in a future, please use 'ldap.searchFilter' instead
  ## @param ldap.searchAttribute Attribute to match against the user name in the search
  ## @param ldap.searchFilter The search filter to use when doing search+bind authentication
  ## @param ldap.scheme Set to `ldaps` to use LDAPS
  ## DEPRECATED ldap.tls as string is deprecated，please use 'ldap.tls.enabled' instead
  ## @param ldap.tls.enabled Se to true to enable TLS encryption
  ##
  ldap:
    enabled: false
    server: ""
    port: ""
    prefix: ""
    suffix: ""
    basedn: ""
    binddn: ""
    bindpw: ""
    searchAttribute: ""
    searchFilter: ""
    scheme: ""
    tls:
      enabled: false
    ## @param ldap.uri LDAP URL beginning in the form `ldap[s]://host[:port]/basedn`. If provided, all the other LDAP parameters will be ignored.
    ## Ref: https://www.postgresql.org/docs/current/auth-ldap.html
    ##
    uri: ""
  ## @param postgresqlDataDir PostgreSQL data dir folder
  ##
  postgresqlDataDir: /bitnami/postgresql/data
  ## @param postgresqlSharedPreloadLibraries Shared preload libraries (comma-separated list)
  ##
  postgresqlSharedPreloadLibraries: "pgaudit"
  ## Start PostgreSQL pod(s) without limitations on shm memory.
  ## By default docker and containerd (and possibly other container runtimes) limit `/dev/shm` to `64M`
  ## ref: https://github.com/docker-library/postgres/issues/416
  ## ref: https://github.com/containerd/containerd/issues/3654
  ##
  shmVolume:
    ## @param shmVolume.enabled Enable emptyDir volume for /dev/shm for PostgreSQL pod(s)
    ##
    enabled: true
    ## @param shmVolume.sizeLimit Set this to enable a size limit on the shm tmpfs
    ## Note: the size of the tmpfs counts against container's memory limit
    ## e.g:
    ## sizeLimit: 1Gi
    ##
    sizeLimit: ""
  ## TLS configuration
  ##
  tls:
    ## @param tls.enabled Enable TLS traffic support
    ##
    enabled: false
    ## @param tls.autoGenerated Generate automatically self-signed TLS certificates
    ##
    autoGenerated: false
    ## @param tls.preferServerCiphers Whether to use the server's TLS cipher preferences rather than the client's
    ##
    preferServerCiphers: true
    ## @param tls.certificatesSecret Name of an existing secret that contains the certificates
    ##
    certificatesSecret: ""
    ## @param tls.certFilename Certificate filename
    ##
    certFilename: ""
    ## @param tls.certKeyFilename Certificate key filename
    ##
    certKeyFilename: ""
    ## @param tls.certCAFilename CA Certificate filename
    ## If provided, PostgreSQL will authenticate TLS/SSL clients by requesting them a certificate
    ## ref: https://www.postgresql.org/docs/9.6/auth-methods.html
    ##
    certCAFilename: ""
    ## @param tls.crlFilename File containing a Certificate Revocation List
    ##
    crlFilename: ""

  ## @section PostgreSQL Primary parameters
  ##
  primary:
    ## @param primary.name Name of the primary database (eg primary, master, leader, ...)
    ##
    name: primary
    ## @param primary.configuration PostgreSQL Primary main configuration to be injected as ConfigMap
    ## ref: https://www.postgresql.org/docs/current/static/runtime-config.html
    ##
    configuration: ""
    ## @param primary.pgHbaConfiguration PostgreSQL Primary client authentication configuration
    ## ref: https://www.postgresql.org/docs/current/static/auth-pg-hba-conf.html
    ## e.g:#
    ## pgHbaConfiguration: |-
    ##   local all all trust
    ##   host all all localhost trust
    ##   host mydatabase mysuser 192.168.0.0/24 md5
    ##
    
    ## @param primary.existingConfigmap Name of an existing ConfigMap with PostgreSQL Primary configuration
    ## NOTE: `primary.configuration` and `primary.pgHbaConfiguration` will be ignored
    ##
    existingConfigmap: ""
    ## @param primary.extendedConfiguration Extended PostgreSQL Primary configuration (appended to main or default configuration)
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#allow-settings-to-be-loaded-from-files-other-than-the-default-postgresqlconf
    ##
    extendedConfiguration: ""
    ## @param primary.existingExtendedConfigmap Name of an existing ConfigMap with PostgreSQL Primary extended configuration
    ## NOTE: `primary.extendedConfiguration` will be ignored
    ##
    existingExtendedConfigmap: ""
    ## Initdb configuration
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#specifying-initdb-arguments
    ##
    initdb:
      ## @param primary.initdb.args PostgreSQL initdb extra arguments
      ##
      args: ""
      ## @param primary.initdb.postgresqlWalDir Specify a custom location for the PostgreSQL transaction log
      ##
      postgresqlWalDir: ""
      ## @param primary.initdb.scripts Dictionary of initdb scripts
      ## Specify dictionary of scripts to be run at first boot
      ## e.g:
      ## scripts:
      ##   my_init_script.sh: |
      ##      #!/bin/sh
      ##      echo "Do something."
      ##
      scripts: {}
      ## @param primary.initdb.scriptsConfigMap ConfigMap with scripts to be run at first boot
      ## NOTE: This will override `primary.initdb.scripts`
      ##
      scriptsConfigMap: ""
      ## @param primary.initdb.scriptsSecret Secret with scripts to be run at first boot (in case it contains sensitive information)
      ## NOTE: This can work along `primary.initdb.scripts` or `primary.initdb.scriptsConfigMap`
      ##
      scriptsSecret: ""
      ## @param primary.initdb.user Specify the PostgreSQL username to execute the initdb scripts
      ##
      user: ""
      ## @param primary.initdb.password Specify the PostgreSQL password to execute the initdb scripts
      ##
      password: ""
    ## Configure current cluster's primary server to be the standby server in other cluster.
    ## This will allow cross cluster replication and provide cross cluster high availability.
    ## You will need to configure pgHbaConfiguration if you want to enable this feature with local cluster replication enabled.
    ## @param primary.standby.enabled Whether to enable current cluster's primary as standby server of another cluster or not
    ## @param primary.standby.primaryHost The Host of replication primary in the other cluster
    ## @param primary.standby.primaryPort The Port of replication primary in the other cluster
    ##
    standby:
      enabled: false
      primaryHost: ""
      primaryPort: ""
    ## @param primary.extraEnvVars Array with extra environment variables to add to PostgreSQL Primary nodes
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param primary.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for PostgreSQL Primary nodes
    ##
    extraEnvVarsCM: ""
    ## @param primary.extraEnvVarsSecret Name of existing Secret containing extra env vars for PostgreSQL Primary nodes
    ##
    extraEnvVarsSecret: ""
    ## @param primary.command Override default container command (useful when using custom images)
    ##
    command: []
    ## @param primary.args Override default container args (useful when using custom images)
    ##
    args: []
    ## Configure extra options for PostgreSQL Primary containers' liveness, readiness and startup probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    ## @param primary.livenessProbe.enabled Enable livenessProbe on PostgreSQL Primary containers
    ## @param primary.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param primary.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param primary.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param primary.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param primary.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param primary.readinessProbe.enabled Enable readinessProbe on PostgreSQL Primary containers
    ## @param primary.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param primary.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param primary.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param primary.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param primary.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param primary.startupProbe.enabled Enable startupProbe on PostgreSQL Primary containers
    ## @param primary.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param primary.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param primary.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param primary.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param primary.startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1
    ## @param primary.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param primary.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param primary.customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## @param primary.lifecycleHooks for the PostgreSQL Primary container to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## PostgreSQL Primary resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param primary.resources.limits The resources limits for the PostgreSQL Primary containers
    ## @param primary.resources.requests.memory The requested memory for the PostgreSQL Primary containers
    ## @param primary.resources.requests.cpu The requested cpu for the PostgreSQL Primary containers
    ##
    resources:
      limits: {}
      requests:
        memory: 256Mi
        cpu: 250m
    ## Pod Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ## @param primary.podSecurityContext.enabled Enable security context
    ## @param primary.podSecurityContext.fsGroup Group ID for the pod
    ##
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    ## Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ## @param primary.containerSecurityContext.enabled Enable container security context
    ## @param primary.containerSecurityContext.runAsUser User ID for the container
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
    ## @param primary.hostAliases PostgreSQL primary pods host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []
    ## @param primary.hostNetwork Specify if host network should be enabled for PostgreSQL pod (postgresql primary)
    ##
    hostNetwork: false
    ## @param primary.hostIPC Specify if host IPC should be enabled for PostgreSQL pod (postgresql primary)
    ##
    hostIPC: false
    ## @param primary.labels Map of labels to add to the statefulset (postgresql primary)
    ##
    labels: {}
    ## @param primary.annotations Annotations for PostgreSQL primary pods
    ##
    annotations: {}
    ## @param primary.podLabels Map of labels to add to the pods (postgresql primary)
    ##
    podLabels: {}
    ## @param primary.podAnnotations Map of annotations to add to the pods (postgresql primary)
    ##
    podAnnotations: {}
    ## @param primary.podAffinityPreset PostgreSQL primary pod affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param primary.podAntiAffinityPreset PostgreSQL primary pod anti-affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## PostgreSQL Primary node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param primary.nodeAffinityPreset.type PostgreSQL primary node affinity preset type. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param primary.nodeAffinityPreset.key PostgreSQL primary node label key to match Ignored if `primary.affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: ""
      ## @param primary.nodeAffinityPreset.values PostgreSQL primary node label values to match. Ignored if `primary.affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param primary.affinity Affinity for PostgreSQL primary pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: primary.podAffinityPreset, primary.podAntiAffinityPreset, and primary.nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}
    ## @param primary.nodeSelector Node labels for PostgreSQL primary pods assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}
    ## @param primary.tolerations Tolerations for PostgreSQL primary pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## @param primary.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
    ##
    topologySpreadConstraints: []
    ## @param primary.priorityClassName Priority Class to use for each pod (postgresql primary)
    ##
    priorityClassName: ""
    ## @param primary.schedulerName Use an alternate scheduler, e.g. "stork".
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""
    ## @param primary.terminationGracePeriodSeconds Seconds PostgreSQL primary pod needs to terminate gracefully
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
    ##
    terminationGracePeriodSeconds: ""
    ## @param primary.updateStrategy.type PostgreSQL Primary statefulset strategy type
    ## @param primary.updateStrategy.rollingUpdate PostgreSQL Primary statefulset rolling update configuration parameters
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    ##
    updateStrategy:
      type: RollingUpdate
      rollingUpdate: {}
    ## @param primary.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the PostgreSQL Primary container(s)
    ##
    extraVolumeMounts: []
    ## @param primary.extraVolumes Optionally specify extra list of additional volumes for the PostgreSQL Primary pod(s)
    ##
    extraVolumes: []
    ## @param primary.sidecars Add additional sidecar containers to the PostgreSQL Primary pod(s)
    ## For example:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []
    ## @param primary.initContainers Add additional init containers to the PostgreSQL Primary pod(s)
    ## Example
    ##
    ## initContainers:
    ##   - name: do-something
    ##     image: busybox
    ##     command: ['do', 'something']
    ##
    initContainers: []
    ## @param primary.extraPodSpec Optionally specify extra PodSpec for the PostgreSQL Primary pod(s)
    ##
    extraPodSpec: {}
    ## PostgreSQL Primary service configuration
    ##
    service:
      ## @param primary.service.type Kubernetes Service type
      ##
      type: ClusterIP
      ## @param primary.service.ports.postgresql PostgreSQL service port
      ##
      ports:
        postgresql: 5432
      ## Node ports to expose
      ## NOTE: choose port between <30000-32767>
      ## @param primary.service.nodePorts.postgresql Node port for PostgreSQL
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      nodePorts:
        postgresql: ""
      ## @param primary.service.clusterIP Static clusterIP or None for headless services
      ## e.g:
      ## clusterIP: None
      ##
      clusterIP: ""
      ## @param primary.service.annotations Annotations for PostgreSQL primary service
      ##
      annotations: {}
      ## @param primary.service.loadBalancerIP Load balancer IP if service type is `LoadBalancer`
      ## Set the LoadBalancer service type to internal only
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      loadBalancerIP: ""
      ## @param primary.service.externalTrafficPolicy Enable client source IP preservation
      ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster
      ## @param primary.service.loadBalancerSourceRanges Addresses that are allowed when service is LoadBalancer
      ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ##
      ## loadBalancerSourceRanges:
      ## - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param primary.service.extraPorts Extra ports to expose in the PostgreSQL primary service
      ##
      extraPorts: []
      ## @param primary.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
      ## If "ClientIP", consecutive client requests will be directed to the same Pod
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
      ##
      sessionAffinity: None
      ## @param primary.service.sessionAffinityConfig Additional settings for the sessionAffinity
      ## sessionAffinityConfig:
      ##   clientIP:
      ##     timeoutSeconds: 300
      ##
      sessionAffinityConfig: {}
      ## Headless service properties
      ##
      headless:
        ## @param primary.service.headless.annotations Additional custom annotations for headless PostgreSQL primary service
        ##
        annotations: {}
    ## PostgreSQL Primary persistence configuration
    ##
    persistence:
      ## @param primary.persistence.enabled Enable PostgreSQL Primary data persistence using PVC
      ##
      enabled: true
      ## @param primary.persistence.existingClaim Name of an existing PVC to use
      ##
      existingClaim: ""
      ## @param primary.persistence.mountPath The path the volume will be mounted at
      ## Note: useful when using custom PostgreSQL images
      ##
      mountPath: /bitnami/postgresql
      ## @param primary.persistence.subPath The subdirectory of the volume to mount to
      ## Useful in dev environments and one PV for multiple services
      ##
      subPath: ""
      ## @param primary.persistence.storageClass PVC Storage Class for PostgreSQL Primary data volume
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: ""
      ## @param primary.persistence.accessModes PVC Access Mode for PostgreSQL volume
      ##
      accessModes:
        - ReadWriteOnce
      ## @param primary.persistence.size PVC Storage Request for PostgreSQL volume
      ##
      size: 8Gi
      ## @param primary.persistence.annotations Annotations for the PVC
      ##
      annotations: {}
      ## @param primary.persistence.labels Labels for the PVC
      ##
      labels: {}
      ## @param primary.persistence.selector Selector to match an existing Persistent Volume (this value is evaluated as a template)
      ## selector:
      ##   matchLabels:
      ##     app: my-app
      ##
      selector: {}
      ## @param primary.persistence.dataSource Custom PVC data source
      ##
      dataSource: {}

  ## @section PostgreSQL read only replica parameters (only used when `architecture` is set to `replication`)
  ##
  readReplicas:
    ## @param readReplicas.name Name of the read replicas database (eg secondary, slave, ...)
    ##
    name: read
    ## @param readReplicas.replicaCount Number of PostgreSQL read only replicas
    ##
    replicaCount: 1
    ## @param readReplicas.extendedConfiguration Extended PostgreSQL read only replicas configuration (appended to main or default configuration)
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#allow-settings-to-be-loaded-from-files-other-than-the-default-postgresqlconf
    ##
    extendedConfiguration: ""
    ## @param readReplicas.extraEnvVars Array with extra environment variables to add to PostgreSQL read only nodes
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param readReplicas.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for PostgreSQL read only nodes
    ##
    extraEnvVarsCM: ""
    ## @param readReplicas.extraEnvVarsSecret Name of existing Secret containing extra env vars for PostgreSQL read only nodes
    ##
    extraEnvVarsSecret: ""
    ## @param readReplicas.command Override default container command (useful when using custom images)
    ##
    command: []
    ## @param readReplicas.args Override default container args (useful when using custom images)
    ##
    args: []
    ## Configure extra options for PostgreSQL read only containers' liveness, readiness and startup probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    ## @param readReplicas.livenessProbe.enabled Enable livenessProbe on PostgreSQL read only containers
    ## @param readReplicas.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param readReplicas.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param readReplicas.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param readReplicas.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param readReplicas.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param readReplicas.readinessProbe.enabled Enable readinessProbe on PostgreSQL read only containers
    ## @param readReplicas.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readReplicas.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readReplicas.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readReplicas.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readReplicas.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param readReplicas.startupProbe.enabled Enable startupProbe on PostgreSQL read only containers
    ## @param readReplicas.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param readReplicas.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param readReplicas.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param readReplicas.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param readReplicas.startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1
    ## @param readReplicas.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param readReplicas.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param readReplicas.customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## @param readReplicas.lifecycleHooks for the PostgreSQL read only container to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## PostgreSQL read only resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param readReplicas.resources.limits The resources limits for the PostgreSQL read only containers
    ## @param readReplicas.resources.requests.memory The requested memory for the PostgreSQL read only containers
    ## @param readReplicas.resources.requests.cpu The requested cpu for the PostgreSQL read only containers
    ##
    resources:
      limits: {}
      requests:
        memory: 256Mi
        cpu: 250m
    ## Pod Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ## @param readReplicas.podSecurityContext.enabled Enable security context
    ## @param readReplicas.podSecurityContext.fsGroup Group ID for the pod
    ##
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    ## Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ## @param readReplicas.containerSecurityContext.enabled Enable container security context
    ## @param readReplicas.containerSecurityContext.runAsUser User ID for the container
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
    ## @param readReplicas.hostAliases PostgreSQL read only pods host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []
    ## @param readReplicas.hostNetwork Specify if host network should be enabled for PostgreSQL pod (PostgreSQL read only)
    ##
    hostNetwork: false
    ## @param readReplicas.hostIPC Specify if host IPC should be enabled for PostgreSQL pod (postgresql primary)
    ##
    hostIPC: false
    ## @param readReplicas.labels Map of labels to add to the statefulset (PostgreSQL read only)
    ##
    labels: {}
    ## @param readReplicas.annotations Annotations for PostgreSQL read only pods
    ##
    annotations: {}
    ## @param readReplicas.podLabels Map of labels to add to the pods (PostgreSQL read only)
    ##
    podLabels: {}
    ## @param readReplicas.podAnnotations Map of annotations to add to the pods (PostgreSQL read only)
    ##
    podAnnotations: {}
    ## @param readReplicas.podAffinityPreset PostgreSQL read only pod affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param readReplicas.podAntiAffinityPreset PostgreSQL read only pod anti-affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## PostgreSQL read only node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param readReplicas.nodeAffinityPreset.type PostgreSQL read only node affinity preset type. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param readReplicas.nodeAffinityPreset.key PostgreSQL read only node label key to match Ignored if `primary.affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: ""
      ## @param readReplicas.nodeAffinityPreset.values PostgreSQL read only node label values to match. Ignored if `primary.affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param readReplicas.affinity Affinity for PostgreSQL read only pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: primary.podAffinityPreset, primary.podAntiAffinityPreset, and primary.nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}
    ## @param readReplicas.nodeSelector Node labels for PostgreSQL read only pods assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}
    ## @param readReplicas.tolerations Tolerations for PostgreSQL read only pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## @param readReplicas.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
    ##
    topologySpreadConstraints: []
    ## @param readReplicas.priorityClassName Priority Class to use for each pod (PostgreSQL read only)
    ##
    priorityClassName: ""
    ## @param readReplicas.schedulerName Use an alternate scheduler, e.g. "stork".
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""
    ## @param readReplicas.terminationGracePeriodSeconds Seconds PostgreSQL read only pod needs to terminate gracefully
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
    ##
    terminationGracePeriodSeconds: ""
    ## @param readReplicas.updateStrategy.type PostgreSQL read only statefulset strategy type
    ## @param readReplicas.updateStrategy.rollingUpdate PostgreSQL read only statefulset rolling update configuration parameters
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    ##
    updateStrategy:
      type: RollingUpdate
      rollingUpdate: {}
    ## @param readReplicas.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the PostgreSQL read only container(s)
    ##
    extraVolumeMounts: []
    ## @param readReplicas.extraVolumes Optionally specify extra list of additional volumes for the PostgreSQL read only pod(s)
    ##
    extraVolumes: []
    ## @param readReplicas.sidecars Add additional sidecar containers to the PostgreSQL read only pod(s)
    ## For example:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []
    ## @param readReplicas.initContainers Add additional init containers to the PostgreSQL read only pod(s)
    ## Example
    ##
    ## initContainers:
    ##   - name: do-something
    ##     image: busybox
    ##     command: ['do', 'something']
    ##
    initContainers: []
    ## @param readReplicas.extraPodSpec Optionally specify extra PodSpec for the PostgreSQL read only pod(s)
    ##
    extraPodSpec: {}
    ## PostgreSQL read only service configuration
    ##
    service:
      ## @param readReplicas.service.type Kubernetes Service type
      ##
      type: ClusterIP
      ## @param readReplicas.service.ports.postgresql PostgreSQL service port
      ##
      ports:
        postgresql: 5432
      ## Node ports to expose
      ## NOTE: choose port between <30000-32767>
      ## @param readReplicas.service.nodePorts.postgresql Node port for PostgreSQL
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      nodePorts:
        postgresql: ""
      ## @param readReplicas.service.clusterIP Static clusterIP or None for headless services
      ## e.g:
      ## clusterIP: None
      ##
      clusterIP: ""
      ## @param readReplicas.service.annotations Annotations for PostgreSQL read only service
      ##
      annotations: {}
      ## @param readReplicas.service.loadBalancerIP Load balancer IP if service type is `LoadBalancer`
      ## Set the LoadBalancer service type to internal only
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      loadBalancerIP: ""
      ## @param readReplicas.service.externalTrafficPolicy Enable client source IP preservation
      ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster
      ## @param readReplicas.service.loadBalancerSourceRanges Addresses that are allowed when service is LoadBalancer
      ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ##
      ## loadBalancerSourceRanges:
      ## - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param readReplicas.service.extraPorts Extra ports to expose in the PostgreSQL read only service
      ##
      extraPorts: []
      ## @param readReplicas.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
      ## If "ClientIP", consecutive client requests will be directed to the same Pod
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
      ##
      sessionAffinity: None
      ## @param readReplicas.service.sessionAffinityConfig Additional settings for the sessionAffinity
      ## sessionAffinityConfig:
      ##   clientIP:
      ##     timeoutSeconds: 300
      ##
      sessionAffinityConfig: {}
      ## Headless service properties
      ##
      headless:
        ## @param readReplicas.service.headless.annotations Additional custom annotations for headless PostgreSQL read only service
        ##
        annotations: {}
    ## PostgreSQL read only persistence configuration
    ##
    persistence:
      ## @param readReplicas.persistence.enabled Enable PostgreSQL read only data persistence using PVC
      ##
      enabled: true
      ## @param readReplicas.persistence.existingClaim Name of an existing PVC to use
      ##
      existingClaim: ""
      ## @param readReplicas.persistence.mountPath The path the volume will be mounted at
      ## Note: useful when using custom PostgreSQL images
      ##
      mountPath: /bitnami/postgresql
      ## @param readReplicas.persistence.subPath The subdirectory of the volume to mount to
      ## Useful in dev environments and one PV for multiple services
      ##
      subPath: ""
      ## @param readReplicas.persistence.storageClass PVC Storage Class for PostgreSQL read only data volume
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: ""
      ## @param readReplicas.persistence.accessModes PVC Access Mode for PostgreSQL volume
      ##
      accessModes:
        - ReadWriteOnce
      ## @param readReplicas.persistence.size PVC Storage Request for PostgreSQL volume
      ##
      size: 8Gi
      ## @param readReplicas.persistence.annotations Annotations for the PVC
      ##
      annotations: {}
      ## @param readReplicas.persistence.labels Labels for the PVC
      ##
      labels: {}
      ## @param readReplicas.persistence.selector Selector to match an existing Persistent Volume (this value is evaluated as a template)
      ## selector:
      ##   matchLabels:
      ##     app: my-app
      ##
      selector: {}
      ## @param readReplicas.persistence.dataSource Custom PVC data source
      ##
      dataSource: {}

  ## @section NetworkPolicy parameters
  ##

  ## Add networkpolicies
  ##
  networkPolicy:
    ## @param networkPolicy.enabled Enable network policies
    ##
    enabled: false
    ## @param networkPolicy.metrics.enabled Enable network policies for metrics (prometheus)
    ## @param networkPolicy.metrics.namespaceSelector [object] Monitoring namespace selector labels. These labels will be used to identify the prometheus' namespace.
    ## @param networkPolicy.metrics.podSelector [object] Monitoring pod selector labels. These labels will be used to identify the Prometheus pods.
    ##
    metrics:
      enabled: false
      ## e.g:
      ## namespaceSelector:
      ##   label: monitoring
      ##
      namespaceSelector: {}
      ## e.g:
      ## podSelector:
      ##   label: monitoring
      ##
      podSelector: {}
    ## Ingress Rules
    ##
    ingressRules:
      ## @param networkPolicy.ingressRules.primaryAccessOnlyFrom.enabled Enable ingress rule that makes PostgreSQL primary node only accessible from a particular origin.
      ## @param networkPolicy.ingressRules.primaryAccessOnlyFrom.namespaceSelector [object] Namespace selector label that is allowed to access the PostgreSQL primary node. This label will be used to identified the allowed namespace(s).
      ## @param networkPolicy.ingressRules.primaryAccessOnlyFrom.podSelector [object] Pods selector label that is allowed to access the PostgreSQL primary node. This label will be used to identified the allowed pod(s).
      ## @param networkPolicy.ingressRules.primaryAccessOnlyFrom.customRules [object] Custom network policy for the PostgreSQL primary node.
      ##
      primaryAccessOnlyFrom:
        enabled: false
        ## e.g:
        ## namespaceSelector:
        ##   label: ingress
        ##
        namespaceSelector: {}
        ## e.g:
        ## podSelector:
        ##   label: access
        ##
        podSelector: {}
        ## custom ingress rules
        ## e.g:
        ## customRules:
        ##   - from:
        ##       - namespaceSelector:
        ##           matchLabels:
        ##             label: example
        ##
        customRules: {}
      ## @param networkPolicy.ingressRules.readReplicasAccessOnlyFrom.enabled Enable ingress rule that makes PostgreSQL read-only nodes only accessible from a particular origin.
      ## @param networkPolicy.ingressRules.readReplicasAccessOnlyFrom.namespaceSelector [object] Namespace selector label that is allowed to access the PostgreSQL read-only nodes. This label will be used to identified the allowed namespace(s).
      ## @param networkPolicy.ingressRules.readReplicasAccessOnlyFrom.podSelector [object] Pods selector label that is allowed to access the PostgreSQL read-only nodes. This label will be used to identified the allowed pod(s).
      ## @param networkPolicy.ingressRules.readReplicasAccessOnlyFrom.customRules [object] Custom network policy for the PostgreSQL read-only nodes.
      ##
      readReplicasAccessOnlyFrom:
        enabled: false
        ## e.g:
        ## namespaceSelector:
        ##   label: ingress
        ##
        namespaceSelector: {}
        ## e.g:
        ## podSelector:
        ##   label: access
        ##
        podSelector: {}
        ## custom ingress rules
        ## e.g:
        ## CustomRules:
        ##   - from:
        ##       - namespaceSelector:
        ##           matchLabels:
        ##             label: example
        ##
        customRules: {}
    ## @param networkPolicy.egressRules.denyConnectionsToExternal Enable egress rule that denies outgoing traffic outside the cluster, except for DNS (port 53).
    ## @param networkPolicy.egressRules.customRules [object] Custom network policy rule
    ##
    egressRules:
      # Deny connections to external. This is not compatible with an external database.
      denyConnectionsToExternal: false
      ## Additional custom egress rules
      ## e.g:
      ## customRules:
      ##   - to:
      ##       - namespaceSelector:
      ##           matchLabels:
      ##             label: example
      ##
      customRules: {}

  ## @section Volume Permissions parameters
  ##

  ## Init containers parameters:
  ## volumePermissions: Change the owner and group of the persistent volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each node
  ##
  volumePermissions:
    ## @param volumePermissions.enabled Enable init container that changes the owner and group of the persistent volume
    ##
    enabled: false
    ## @param volumePermissions.image.registry Init container volume-permissions image registry
    ## @param volumePermissions.image.repository Init container volume-permissions image repository
    ## @param volumePermissions.image.tag Init container volume-permissions image tag (immutable tags are recommended)
    ## @param volumePermissions.image.digest Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
    ## @param volumePermissions.image.pullPolicy Init container volume-permissions image pull policy
    ## @param volumePermissions.image.pullSecrets Init container volume-permissions image pull secrets
    ##
    image:
      registry: docker.io
      repository: bitnami/bitnami-shell
      tag: 11-debian-11-r90
      digest: ""
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    ## Init container resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param volumePermissions.resources.limits Init container volume-permissions resource limits
    ## @param volumePermissions.resources.requests Init container volume-permissions resource requests
    ##
    resources:
      limits: {}
      requests: {}
    ## Init container' Security Context
    ## Note: the chown of the data folder is done to containerSecurityContext.runAsUser
    ## and not the below volumePermissions.containerSecurityContext.runAsUser
    ## @param volumePermissions.containerSecurityContext.runAsUser User ID for the init container
    ##
    containerSecurityContext:
      runAsUser: 0

  ## @section Other Parameters
  ##

  ## @param serviceBindings.enabled Create secret for service binding (Experimental)
  ## Ref: https://servicebinding.io/service-provider/
  ##
  serviceBindings:
    enabled: false

  ## Service account for PostgreSQL to use.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    ## @param serviceAccount.create Enable creation of ServiceAccount for PostgreSQL pod
    ##
    create: false
    ## @param serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
    ## Can be set to false if pods using this serviceAccount do not need to use K8s API
    ##
    automountServiceAccountToken: true
    ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
    ##
    annotations: {}
  ## Creates role for ServiceAccount
  ## @param rbac.create Create Role and RoleBinding (required for PSP to work)
  ##
  rbac:
    create: false
    ## @param rbac.rules Custom RBAC rules to set
    ## e.g:
    ## rules:
    ##   - apiGroups:
    ##       - ""
    ##     resources:
    ##       - pods
    ##     verbs:
    ##       - get
    ##       - list
    ##
    rules: []
  ## Pod Security Policy
  ## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
  ## @param psp.create Whether to create a PodSecurityPolicy. WARNING: PodSecurityPolicy is deprecated in Kubernetes v1.21 or later, unavailable in v1.25 or later
  ##
  psp:
    create: false

  ## @section Metrics Parameters
  ##

  metrics:
    ## @param metrics.enabled Start a prometheus exporter
    ##
    enabled: false
    ## @param metrics.image.registry PostgreSQL Prometheus Exporter image registry
    ## @param metrics.image.repository PostgreSQL Prometheus Exporter image repository
    ## @param metrics.image.tag PostgreSQL Prometheus Exporter image tag (immutable tags are recommended)
    ## @param metrics.image.digest PostgreSQL image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
    ## @param metrics.image.pullPolicy PostgreSQL Prometheus Exporter image pull policy
    ## @param metrics.image.pullSecrets Specify image pull secrets
    ##
    image:
      registry: docker.io
      repository: bitnami/postgres-exporter
      tag: 0.11.1-debian-11-r64
      digest: ""
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    ## @param metrics.customMetrics Define additional custom metrics
    ## ref: https://github.com/wrouesnel/postgres_exporter#adding-new-metrics-via-a-config-file
    ## customMetrics:
    ##   pg_database:
    ##     query: "SELECT d.datname AS name, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE 0 END AS size_bytes FROM pg_catalog.pg_database d where datname not in ('template0', 'template1', 'postgres')"
    ##     metrics:
    ##       - name:
    ##           usage: "LABEL"
    ##           description: "Name of the database"
    ##       - size_bytes:
    ##           usage: "GAUGE"
    ##           description: "Size of the database in bytes"
    ##
    customMetrics: {}
    ## @param metrics.extraEnvVars Extra environment variables to add to PostgreSQL Prometheus exporter
    ## see: https://github.com/wrouesnel/postgres_exporter#environment-variables
    ## For example:
    ##  extraEnvVars:
    ##  - name: PG_EXPORTER_DISABLE_DEFAULT_METRICS
    ##    value: "true"
    ##
    extraEnvVars: []
    ## PostgreSQL Prometheus exporter containers' Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param metrics.containerSecurityContext.enabled Enable PostgreSQL Prometheus exporter containers' Security Context
    ## @param metrics.containerSecurityContext.runAsUser Set PostgreSQL Prometheus exporter containers' Security Context runAsUser
    ## @param metrics.containerSecurityContext.runAsNonRoot Set PostgreSQL Prometheus exporter containers' Security Context runAsNonRoot
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
      runAsNonRoot: true
    ## Configure extra options for PostgreSQL Prometheus exporter containers' liveness, readiness and startup probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    ## @param metrics.livenessProbe.enabled Enable livenessProbe on PostgreSQL Prometheus exporter containers
    ## @param metrics.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param metrics.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param metrics.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param metrics.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param metrics.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param metrics.readinessProbe.enabled Enable readinessProbe on PostgreSQL Prometheus exporter containers
    ## @param metrics.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param metrics.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param metrics.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param metrics.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param metrics.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    ## @param metrics.startupProbe.enabled Enable startupProbe on PostgreSQL Prometheus exporter containers
    ## @param metrics.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param metrics.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param metrics.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param metrics.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param metrics.startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1
    ## @param metrics.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param metrics.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param metrics.customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## @param metrics.containerPorts.metrics PostgreSQL Prometheus exporter metrics container port
    ##
    containerPorts:
      metrics: 9187
    ## PostgreSQL Prometheus exporter resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param metrics.resources.limits The resources limits for the PostgreSQL Prometheus exporter container
    ## @param metrics.resources.requests The requested resources for the PostgreSQL Prometheus exporter container
    ##
    resources:
      limits: {}
      requests: {}
    ## Service configuration
    ##
    service:
      ## @param metrics.service.ports.metrics PostgreSQL Prometheus Exporter service port
      ##
      ports:
        metrics: 9187
      ## @param metrics.service.clusterIP Static clusterIP or None for headless services
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address
      ##
      clusterIP: ""
      ## @param metrics.service.sessionAffinity Control where client requests go, to the same pod or round-robin
      ## Values: ClientIP or None
      ## ref: https://kubernetes.io/docs/user-guide/services/
      ##
      sessionAffinity: None
      ## @param metrics.service.annotations [object] Annotations for Prometheus to auto-discover the metrics endpoint
      ##
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.metrics.service.ports.metrics }}"
    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using Prometheus Operator
      ##
      enabled: false
      ## @param metrics.serviceMonitor.namespace Namespace for the ServiceMonitor Resource (defaults to the Release Namespace)
      ##
      namespace: ""
      ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ##
      interval: ""
      ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ##
      scrapeTimeout: ""
      ## @param metrics.serviceMonitor.labels Additional labels that can be used so ServiceMonitor will be discovered by Prometheus
      ##
      labels: {}
      ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
      ##
      selector: {}
      ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping
      ##
      relabelings: []
      ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
      ##
      metricRelabelings: []
      ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
      ##
      honorLabels: false
      ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
      ##
      jobLabel: ""
    ## Custom PrometheusRule to be defined
    ## The value is evaluated as a template, so, for example, the value can depend on .Release or .Chart
    ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
    ##
    prometheusRule:
      ## @param metrics.prometheusRule.enabled Create a PrometheusRule for Prometheus Operator
      ##
      enabled: false
      ## @param metrics.prometheusRule.namespace Namespace for the PrometheusRule Resource (defaults to the Release Namespace)
      ##
      namespace: ""
      ## @param metrics.prometheusRule.labels Additional labels that can be used so PrometheusRule will be discovered by Prometheus
      ##
      labels: {}
      ## @param metrics.prometheusRule.rules PrometheusRule definitions
      ## Make sure to constraint the rules to the current postgresql service.
      ## rules:
      ##   - alert: HugeReplicationLag
      ##     expr: pg_replication_lag{service="{{ printf "%s-metrics" (include "common.names.fullname" .) }}"} / 3600 > 1
      ##     for: 1m
      ##     labels:
      ##       severity: critical
      ##     annotations:
      ##       description: replication for {{ include "common.names.fullname" . }} PostgreSQL is lagging by {{ "{{ $value }}" }} hour(s).
      ##       summary: PostgreSQL replication is lagging by {{ "{{ $value }}" }} hour(s).
      ##
      rules: []

mariadb:
  enabled: true
  ## Global Docker image parameters
  ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
  ## Current available global Docker image parameters: imageRegistry and imagePullSecrets
  ##
  # global:
  #   imageRegistry: myRegistryName
  #   imagePullSecrets:
  #     - myRegistryKeySecretName
  #   storageClass: myStorageClass

  ## Bitnami MariaDB image
  ## ref: https://hub.docker.com/r/bitnami/mariadb/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/mariadb
    tag: 10.5.10-debian-10-r18
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## Example:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and/or NAMI debugging in the image
    ##
    debug: false

## String to partially override mariadb.fullname template (will maintain the release name)
##
# nameOverride:

## String to fully override mariadb.fullname template
##
# fullnameOverride:

## Cluster domain
##
  clusterDomain: cluster.local

## Common annotations to add to all MariaDB resources (sub-charts are not considered). Evaluated as a template
##
  commonAnnotations: {}

## Common labels to add to all MariaDB resources (sub-charts are not considered). Evaluated as a template
##
  commonLabels: {}

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName:

## MariaDB architecture. Allowed values: standalone or replication
##
  architecture: standalone

## MariaDB Authentication parameters
##
  auth:
    ## MariaDB root password
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb#setting-the-root-password-on-first-run
    ##
    rootPassword: ""
    ## MariaDB custom user and database
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#creating-a-database-on-first-run
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#creating-a-database-user-on-first-run
    ##
    database: my_database
    username: ""
    password: ""
    ## MariaDB replication user and password
    ## ref: https://github.com/bitnami/bitnami-docker-mariadb#setting-up-a-replication-cluster
    ##
    replicationUser: replicator
    replicationPassword: ""
    ## Existing secret with MariaDB credentials
    ## NOTE: When it's set the previous parameters are ignored.
    ##
    # existingSecret: name-of-existing-secret
    ## Force users to specify required passwords
    ##
    forcePassword: false
    ## Mount credentials as files instead of using an environment variable
    ##
    usePasswordFiles: false
    ## Use custom secret files other than chart provided when usePasswordFiles is set to "true"
    ## Example:
    ## customPasswordFiles:
    ##   root: /vault/secrets/mariadb-root
    ##   user: /vault/secrets/mariadb-user
    ##   replicator: /vault/secrets/mariadb-replicator
    ##
    customPasswordFiles: {}

## initdb scripts
## Specify dictionary of scripts to be run at first boot
## Example:
## initdbScripts:
##   my_init_script.sh: |
##      #!/bin/bash
##      echo "Do something."
##
  initdbScripts: {}

## Existing ConfigMap with custom init scripts
##
# initdbScriptsConfigMap:

## Mariadb Primary parameters
##
  primary:
    ## Command and args for running the container (set to default if not set). Use array form
    ##
    command: []
    args: []

    ## Deployment pod host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []

    ## Configure MariaDB Primary with a custom my.cnf file
    ## ref: https://mysql.com/kb/en/mysql/configuring-mysql-with-mycnf/#example-of-configuration-file
    ##
    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

    ## Name of existing ConfigMap with MariaDB Primary configuration.
    ## NOTE: When it's set the 'configuration' parameter is ignored
    ##
    # existingConfiguration:

    ## updateStrategy for Mariadb Primary statefulset
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    ##
    # @SM PATCH THIS
    # updateStrategy: RollingUpdate
    updateStrategy:
      type: RollingUpdate
    # EO @SM PATCH
    
    ## Partition update strategy for Mariadb Primary statefulset
    ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions
    ##
    # rollingUpdatePartition:

    ## Mariadb Primary pod annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}

    ## Mariadb Primary pod affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAffinityPreset: ""

    ## Mariadb Primary pod anti-affinity preset
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## Mariadb Primary node affinity preset
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ## Allowed values: soft, hard
    ##
    nodeAffinityPreset:
      ## Node affinity type
      ## Allowed values: soft, hard
      ##
      type: ""
      ## Node label key to match
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: ""
      ## Node label values to match
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []

    ## Affinity for MariaDB primary pods assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Node labels for MariaDB primary pods assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}

    ## Tolerations for MariaDB primary pods assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

    ## Priority class for MariaDB primary pods assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    ##
    priorityClassName: ""

    ## MariaDB primary Pod security context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ##
    podSecurityContext:
      enabled: true
      fsGroup: 1001

    ## MariaDB primary container security context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001

    ## MariaDB primary container's resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits: {}
      #   memory: 256Mi
      #   cpu: 100m
      requests: {}
      #   memory: 256Mi
      #   cpu: 100m

    ## MariaDB primary container's liveness and readiness probes
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## MariaDB primary custom liveness probe
    ##
    customLivenessProbe: {}

    ## MariaDB primary custom rediness probe
    ##
    customReadinessProbe: {}

    ## MariaDB primary additional command line flags
    ## Can be used to specify command line flags, for example:
    ## E.g.
    ## extraFlags: "--max-connect-errors=1000 --max_connections=155"
    ##
    extraFlags: ""

    ## An array to add extra environment variables on MariaDB primary containers
    ## E.g.
    ## extraEnvVars:
    ##  - name: TZ
    ##    value: "Europe/Paris"
    ##
    extraEnvVars: []

    ## ConfigMap with extra env vars for MariaDB primary containers:
    ##
    extraEnvVarsCM: ""

    ## Secret with extra env vars for MariaDB primary containers:
    ##
    extraEnvVarsSecret: ""

    ## Enable persistence using Persistent Volume Claims
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      ## If true, use a Persistent Volume Claim, If false, use emptyDir
      ##
      enabled: true
      ## Name of existing PVC to hold MariaDB Primary data
      ## NOTE: When it's set the rest of persistence parameters are ignored
      ##
      # existingClaim:
      ## Subdirectory of the volume to mount
      # subPath:
      ## Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      ## Persistent Volume Claim annotations
      ##
      annotations: {}
      ## Persistent Volume Access Mode
      ##
      accessModes:
        - ReadWriteOnce
      ## Persistent Volume size
      ##
      size: 8Gi
      ## selector can be used to match an existing PersistentVolume
      ## selector:
      ##   matchLabels:
      ##     app: my-app
      ##
      selector: {}

    ## Extra volumes to add to the MariaDB Primary pod(s)
    ##
    extraVolumes: []

    ## Extra volume mounts to add to the MariaDB Primary container(s)
    ##
    extraVolumeMounts: []

    ## Extra init containers to add to the MariaDB Primary pod(s)
    ##
    initContainers: []

    ## Extra sidecar containers to add to the MariaDB Primary pod(s)
    ##
    sidecars: []

    ## MariaDB Primary Service parameters
    ##
    service:
      ## Service type
      ##
      type: ClusterIP
      ## Service port
      ##
      port: 3306
      ## Specify the nodePort value for the LoadBalancer and NodePort service types.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      nodePort: ""
      ## Service clusterIP
      ##
      # clusterIP: None
      clusterIP: ""
      ## Set the LoadBalancer service type to internal only.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      loadBalancerIP: ""
      ## Load Balancer sources
      ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## E.g.
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## Provide any additional annotations which may be required
      ##
      annotations: {}

    ## MariaDB primary Pod Disruption Budget configuration
    ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    ##
    pdb:
      enabled: false
      ## Min number of pods that must still be available after the eviction
      ##
      minAvailable: 1
      ## Max number of pods that can be unavailable after the eviction
      ##
      # maxUnavailable: 1

## Mariadb Secondary parameters
##
  secondary:
    ## Number of Mariadb Secondary replicas to deploy
    ##
    replicaCount: 1

    ## Command and args for running the container (set to default if not set). Use array form
    ##
    command: []
    args: []

    ## Deployment pod host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []

    ## Configure MariaDB Secondary with a custom my.cnf file
    ## ref: https://mysql.com/kb/en/mysql/configuring-mysql-with-mycnf/#example-of-configuration-file
    ##
    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

    ## Name of existing ConfigMap with MariaDB Secondary configuration.
    ## NOTE: When it's set the 'configuration' parameter is ignored
    ##
    # existingConfiguration:

    ## updateStrategy for Mariadb Secondary statefulset
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    ##
    updateStrategy: RollingUpdate

    ## Partition update strategy for Mariadb Secondary statefulset
    ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions
    ##
    # rollingUpdatePartition:

    ## Mariadb Secondary pod annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}

    ## Mariadb Secondary pod affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAffinityPreset: ""

    ## Mariadb Secondary pod anti-affinity preset
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## Mariadb Secondary node affinity preset
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ## Allowed values: soft, hard
    ##
    nodeAffinityPreset:
      ## Node affinity type
      ## Allowed values: soft, hard
      ##
      type: ""
      ## Node label key to match
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: ""
      ## Node label values to match
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []

    ## Affinity for MariaDB secondary pods assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Node labels for MariaDB secondary pods assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}

    ## Tolerations for MariaDB secondary pods assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

    ## Priority class for MariaDB secondary pods assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    ##
    priorityClassName: ""

    ## MariaDB secondary Pod security context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ##
    podSecurityContext:
      enabled: true
      fsGroup: 1001

    ## MariaDB secondary container security context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001

    ## MariaDB secondary container's resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits: {}
      #   memory: 256Mi
      #   cpu: 100m
      requests: {}
      #   memory: 256Mi
      #   cpu: 100m

    ## MariaDB secondary container's liveness and readiness probes
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## MariaDB secondary custom liveness probe
    ##
    customLivenessProbe: {}

    ## MariaDB secondary custom rediness probe
    ##
    customReadinessProbe: {}

    ## MariaDB secondary additional command line flags
    ## Can be used to specify command line flags, for example:
    ## E.g.
    ## extraFlags: "--max-connect-errors=1000 --max_connections=155"
    ##
    extraFlags: ""

    ## An array to add extra environment variables on MariaDB secondary containers
    ## E.g.
    ## extraEnvVars:
    ##  - name: TZ
    ##    value: "Europe/Paris"
    ##
    extraEnvVars: []

    ## ConfigMap with extra env vars for MariaDB secondary containers:
    ##
    extraEnvVarsCM: ""

    ## Secret with extra env vars for MariaDB secondary containers:
    ##
    extraEnvVarsSecret: ""

    ## Enable persistence using Persistent Volume Claims
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      ## If true, use a Persistent Volume Claim, If false, use emptyDir
      ##
      enabled: true
      ## Subdirectory of the volume to mount
      # subPath:
      ## Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      ## Persistent Volume Claim annotations
      ##
      annotations: {}
      ## Persistent Volume Access Mode
      ##
      accessModes:
        - ReadWriteOnce
      ## Persistent Volume size
      ##
      size: 8Gi
      ## selector can be used to match an existing PersistentVolume
      ## selector:
      ##   matchLabels:
      ##     app: my-app
      ##
      selector: {}

    ## Extra volumes to add to the MariaDB Secondary pod(s)
    ##
    extraVolumes: []

    ## Extra volume mounts to add to the MariaDB Secondary container(s)
    ##
    extraVolumeMounts: []

    ## Extra init containers to add to the MariaDB Secondary pod(s)
    ##
    initContainers: []

    ## Extra sidecar containers to add to the MariaDB Secondary pod(s)
    ##
    sidecars: []

    ## MariaDB Secondary Service parameters
    ##
    service:
      ## Service type
      ##
      type: ClusterIP
      ## Service port
      ##
      port: 3306
      ## Specify the nodePort value for the LoadBalancer and NodePort service types.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      nodePort: ""
      ## Service clusterIP
      ##
      # clusterIP: None
      clusterIP: ""
      ## Set the LoadBalancer service type to internal only.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      loadBalancerIP: ""
      ## Load Balancer sources
      ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## E.g.
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## Provide any additional annotations which may be required
      ##
      annotations: {}

    ## MariaDB secondary Pod Disruption Budget configuration
    ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    ##
    pdb:
      enabled: false
      ## Min number of pods that must still be available after the eviction
      ##
      minAvailable: 1
      ## Max number of pods that can be unavailable after the eviction
      ##
      # maxUnavailable: 1

## MariaDB pods ServiceAccount
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
  serviceAccount:
    ## Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the mariadb.fullname template
    ##
    # name:
    ## Annotations to add to the service account (evaluated as a template)
    ##
    annotations: {}

## Role Based Access
## ref: https://kubernetes.io/docs/admin/authorization/rbac/
##
  rbac:
    ## Specifies whether RBAC rules should be created
    ##
    create: false

## Init containers parameters:
## volumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.
##
  volumePermissions:
    enabled: false
    image:
      registry: docker.io
      repository: bitnami/bitnami-shell
      tag: 10-debian-10-r91
      pullPolicy: Always
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ##
      # pullSecrets:
      #   - myRegistryKeySecretName
    resources: {}

## Mysqld Prometheus exporter parameters
##
  metrics:
    enabled: false
    image:
      registry: docker.io
      repository: bitnami/mysqld-exporter
      tag: 0.12.1-debian-10-r448
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ##
      # pullSecrets:
      #   - myRegistryKeySecretName

    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9104"

    ## Extra args to be passed to mysqld_exporter
    ## ref: https://github.com/prometheus/mysqld_exporter/
    ## E.g.
    ## - --collect.auto_increment.columns
    ## - --collect.binlog_size
    ## - --collect.engine_innodb_status
    ## - --collect.engine_tokudb_status
    ## - --collect.global_status
    ## - --collect.global_variables
    ## - --collect.info_schema.clientstats
    ## - --collect.info_schema.innodb_metrics
    ## - --collect.info_schema.innodb_tablespaces
    ## - --collect.info_schema.innodb_cmp
    ## - --collect.info_schema.innodb_cmpmem
    ## - --collect.info_schema.processlist
    ## - --collect.info_schema.processlist.min_time
    ## - --collect.info_schema.query_response_time
    ## - --collect.info_schema.tables
    ## - --collect.info_schema.tables.databases
    ## - --collect.info_schema.tablestats
    ## - --collect.info_schema.userstats
    ## - --collect.perf_schema.eventsstatements
    ## - --collect.perf_schema.eventsstatements.digest_text_limit
    ## - --collect.perf_schema.eventsstatements.limit
    ## - --collect.perf_schema.eventsstatements.timelimit
    ## - --collect.perf_schema.eventswaits
    ## - --collect.perf_schema.file_events
    ## - --collect.perf_schema.file_instances
    ## - --collect.perf_schema.indexiowaits
    ## - --collect.perf_schema.tableiowaits
    ## - --collect.perf_schema.tablelocks
    ## - --collect.perf_schema.replication_group_member_stats
    ## - --collect.slave_status
    ## - --collect.slave_hosts
    ## - --collect.heartbeat
    ## - --collect.heartbeat.database
    ## - --collect.heartbeat.table
    ##
    extraArgs:
      primary: []
      secondary: []

    ## Mysqld Prometheus exporter resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits: {}
      #   memory: 256Mi
      #   cpu: 100m
      requests: {}
      #   memory: 256Mi
      #   cpu: 100m

    ## Mysqld Prometheus exporter liveness and readiness probes
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 120
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3
    readinessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3

    ## Prometheus Service Monitor
    ## ref: https://github.com/coreos/prometheus-operator
    ##
    serviceMonitor:
      ## If the operator is installed in your cluster, set to true to create a Service Monitor Entry
      ##
      enabled: false
      ## Specify the namespace in which the serviceMonitor resource will be created
      ##
      # namespace: ""
      ## Specify the interval at which metrics should be scraped
      ##
      interval: 30s
      ## Specify the timeout after which the scrape is ended
      ##
      # scrapeTimeout: 30s
      ## Specify Metric Relabellings to add to the scrape endpoint
      ##
      # relabellings:
      ## Specify honorLabels parameter to add the scrape endpoint
      ##
      honorLabels: false
      ## Specify the release for ServiceMonitor. Sometimes it should be custom for prometheus operator to work
      ##
      # release: ""
      ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
      ##
      additionalLabels: {}

  ## Array with extra yaml to deploy with the chart. Evaluated as a template
  ##
  extraDeploy: [] 

redis:
  enabled: true
  ## @section Global parameters
  ## Global Docker image parameters
  ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
  ## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

  ## @param global.imageRegistry Global Docker image registry
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  ## @param global.storageClass Global StorageClass for Persistent Volume(s)
  ## @param global.redis.password Global Redis(TM) password (overrides `auth.password`)
  ##
  global:
    imageRegistry:
    ## E.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
    storageClass:
    redis:
      password:

  ## @section Common parameters

  ## @param kubeVersion Override Kubernetes version
  ##
  kubeVersion:
  ## @param nameOverride String to partially override common.names.fullname
  ##
  nameOverride:
  ## @param fullnameOverride String to fully override common.names.fullname
  ##
  fullnameOverride:
  ## @param commonLabels Labels to add to all deployed objects
  ##
  commonLabels: {}
  ## @param commonAnnotations Annotations to add to all deployed objects
  ##
  commonAnnotations: {}
  ## @param clusterDomain Kubernetes cluster domain name
  ##
  clusterDomain: cluster.local
  ## @param extraDeploy Array of extra objects to deploy with the release
  ##
  extraDeploy: []

  ## @section Redis(TM) Image parameters

  ## Bitnami Redis(TM) image
  ## ref: https://hub.docker.com/r/bitnami/redis/tags/
  ## @param image.registry Redis(TM) image registry
  ## @param image.repository Redis(TM) image repository
  ## @param image.tag Redis(TM) image tag (immutable tags are recommended)
  ## @param image.pullPolicy Redis(TM) image pull policy
  ## @param image.pullSecrets Redis(TM) image pull secrets
  ## @param image.debug Enable image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 6.2.3-debian-10-r22
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false

  ## @section Redis(TM) common configuration parameters
  ## https://github.com/bitnami/bitnami-docker-redis#configuration

  ## @param architecture Redis(TM) architecture. Allowed values: `standalone` or `replication`
  ##
  architecture: replication
  ## Redis(TM) Authentication parameters
  ## ref: https://github.com/bitnami/bitnami-docker-redis#setting-the-server-password-on-first-run
  ##
  auth:
    ## @param auth.enabled Enable password authentication
    ##
    enabled: true
    ## @param auth.sentinel Enable password authentication on sentinels too
    ##
    sentinel: true
    ## @param auth.password Redis(TM) password
    ## Defaults to a random 10-character alphanumeric string if not set
    ##
    password: ""
    ## @param auth.existingSecret The name of an existing secret with Redis(TM) credentials
    ## NOTE: When it's set, the previous `auth.password` parameter is ignored
    ##
    existingSecret:
    ## @param auth.existingSecretPasswordKey Password key to be retrieved from existing secret
    ## NOTE: ignored unless `auth.existingSecret` parameter is set
    ##
    existingSecretPasswordKey:
    ## @param auth.usePasswordFiles Mount credentials as files instead of using an environment variable
    ##
    usePasswordFiles: false
  ## @skip commonConfiguration
  ## ref: https://redis.io/topics/config
  ##
  commonConfiguration: |-
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
  ## @param existingConfigmap The name of an existing ConfigMap with your custom configuration for Redis(TM) nodes
  ##
  existingConfigmap:

  ## @section Redis(TM) master configuration parameters

  master:
    ## @param master.configuration Configuration for Redis(TM) master nodes
    ## ref: https://redis.io/topics/config
    ##
    configuration:
    ## @param master.disableCommands [array] Array with Redis(TM) commands to disable on master nodes
    ## Commands will be completely disabled by renaming each to an empty string.
    ## ref: https://redis.io/topics/security#disabling-of-specific-commands
    ##
    disableCommands:
      - FLUSHDB
      - FLUSHALL
    ## @param master.command Override default container command (useful when using custom images)
    ##
    command: []
    ## @param master.args Override default container args (useful when using custom images)
    ##
    args: []
    ## @param master.preExecCmds Additional commands to run prior to starting Redis(TM) master
    ##
    preExecCmds: []
    ## @param master.extraFlags Array with additional command line flags for Redis(TM) master
    ## e.g:
    ## extraFlags:
    ##  - "--maxmemory-policy volatile-ttl"
    ##  - "--repl-backlog-size 1024mb"
    ##
    extraFlags: []
    ## @param master.extraEnvVars Array with extra environment variables to add to Redis(TM) master nodes
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param master.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Redis(TM) master nodes
    ##
    extraEnvVarsCM:
    ## @param master.extraEnvVarsSecret Name of existing Secret containing extra env vars for Redis(TM) master nodes
    ##
    extraEnvVarsSecret:
    ## @param master.containerPort Container port to open on Redis(TM) master nodes
    ##
    containerPort: 6379
    ## Configure extra options for Redis(TM) containers' liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param master.livenessProbe.enabled Enable livenessProbe on Redis(TM) master nodes
    ## @param master.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param master.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param master.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param master.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param master.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    ## @param master.readinessProbe.enabled Enable readinessProbe on Redis(TM) master nodes
    ## @param master.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param master.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param master.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param master.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param master.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 5
    ## @param master.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param master.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## Redis(TM) master resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param master.resources.limits The resources limits for the Redis(TM) master containers
    ## @param master.resources.requests The requested resources for the Redis(TM) master containers
    ##
    resources:
      limits: {}
      requests: {}
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param master.podSecurityContext.enabled Enabled Redis(TM) master pods' Security Context
    ## @param master.podSecurityContext.fsGroup Set Redis(TM) master pod's Security Context fsGroup
    ##
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param master.containerSecurityContext.enabled Enabled Redis(TM) master containers' Security Context
    ## @param master.containerSecurityContext.runAsUser Set Redis(TM) master containers' Security Context runAsUser
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
    ## @param master.schedulerName Alternate scheduler for Redis(TM) master pods
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName:
    ## @param master.updateStrategy.type Redis(TM) master statefulset strategy type
    ## @skip master.updateStrategy.rollingUpdate
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    ##
    updateStrategy:
      ## StrategyType
      ## Can be set to RollingUpdate or OnDelete
      ##
      type: RollingUpdate
      rollingUpdate: {}
    ## @param master.priorityClassName Redis(TM) master pods' priorityClassName
    ##
    priorityClassName: ""
    ## @param master.hostAliases Redis(TM) master pods host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []
    ## @param master.podLabels Extra labels for Redis(TM) master pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param master.podAnnotations Annotations for Redis(TM) master pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param master.shareProcessNamespace Share a single process namespace between all of the containers in Redis(TM) master pods
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/share-process-namespace/
    ##
    shareProcessNamespace: false
    ## @param master.podAffinityPreset Pod affinity preset. Ignored if `master.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param master.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `master.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node master.affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param master.nodeAffinityPreset.type Node affinity preset type. Ignored if `master.affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param master.nodeAffinityPreset.key Node label key to match. Ignored if `master.affinity` is set
      ##
      key: ""
      ## @param master.nodeAffinityPreset.values Node label values to match. Ignored if `master.affinity` is set
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param master.affinity Affinity for Redis(TM) master pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## NOTE: `master.podAffinityPreset`, `master.podAntiAffinityPreset`, and `master.nodeAffinityPreset` will be ignored when it's set
    ##
    affinity: {}
    ## @param master.nodeSelector Node labels for Redis(TM) master pods assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}
    ## @param master.tolerations Tolerations for Redis(TM) master pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## @param master.spreadConstraints Spread Constraints for Redis(TM) master pod assignment
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    ## E.g.
    ## spreadConstraints:
    ##   - maxSkew: 1
    ##     topologyKey: node
    ##     whenUnsatisfiable: DoNotSchedule
    ##
    spreadConstraints: {}
    ## @param master.lifecycleHooks for the Redis(TM) master container(s) to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## @param master.extraVolumes Optionally specify extra list of additional volumes for the Redis(TM) master pod(s)
    ##
    extraVolumes: []
    ## @param master.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Redis(TM) master container(s)
    ##
    extraVolumeMounts: []
    ## @param master.sidecars Add additional sidecar containers to the Redis(TM) master pod(s)
    ## e.g:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: {}
    ## @param master.initContainers Add additional init containers to the Redis(TM) master pod(s)
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
    ## e.g:
    ## initContainers:
    ##  - name: your-image-name
    ##    image: your-image
    ##    imagePullPolicy: Always
    ##    command: ['sh', '-c', 'echo "hello world"']
    ##
    initContainers: {}
    ## Persistence parameters
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      ## @param master.persistence.enabled Enable persistence on Redis(TM) master nodes using Persistent Volume Claims
      ##
      enabled: true
      ## @param master.persistence.path The path the volume will be mounted at on Redis(TM) master containers
      ## NOTE: Useful when using different Redis(TM) images
      ##
      path: /data
      ## @param master.persistence.subPath The subdirectory of the volume to mount on Redis(TM) master containers
      ## NOTE: Useful in dev environments
      ##
      subPath: ""
      ## @param master.persistence.storageClass Persistent Volume storage class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
      ##
      storageClass:
      ## @param master.persistence.accessModes [array] Persistent Volume access modes
      ##
      accessModes:
        - ReadWriteOnce
      ## @param master.persistence.size Persistent Volume size
      ##
      size: 8Gi
      ## @param master.persistence.annotations Additional custom annotations for the PVC
      ##
      annotations: {}
      ## @param master.persistence.selector Additional labels to match for the PVC
      ## e.g:
      ## selector:
      ##   matchLabels:
      ##     app: my-app
      ##
      selector: {}
      ## @param master.persistence.existingClaim Use a existing PVC which must be created manually before bound
      ## NOTE: requires master.persistence.enabled: true
      ##
      existingClaim:
    ## Redis(TM) master service parameters
    ##
    service:
      ## @param master.service.type Redis(TM) master service type
      ##
      type: ClusterIP
      ## @param master.service.port Redis(TM) master service port
      ##
      port: 6379
      ## @param master.service.nodePort Node port for Redis(TM) master
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ## NOTE: choose port between <30000-32767>
      ##
      nodePort:
      ## @param master.service.externalTrafficPolicy Redis(TM) master service external traffic policy
      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster
      ## @param master.service.clusterIP Redis(TM) master service Cluster IP
      ##
      clusterIP:
      ## @param master.service.loadBalancerIP Redis(TM) master service Load Balancer IP
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      loadBalancerIP:
      ## @param master.service.loadBalancerSourceRanges Redis(TM) master service Load Balancer sources
      ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## e.g.
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param master.service.annotations Additional custom annotations for Redis(TM) master service
      ##
      annotations: {}
    ## @param master.terminationGracePeriodSeconds Integer setting the termination grace period for the redis-master pods
    ##
    terminationGracePeriodSeconds: 30

  ## @section Redis(TM) replicas configuration parameters

  replica:
    ## @param replica.replicaCount Number of Redis(TM) replicas to deploy
    ##
    replicaCount: 3
    ## @param replica.configuration Configuration for Redis(TM) replicas nodes
    ## ref: https://redis.io/topics/config
    ##
    configuration:
    ## @param replica.disableCommands [array] Array with Redis(TM) commands to disable on replicas nodes
    ## Commands will be completely disabled by renaming each to an empty string.
    ## ref: https://redis.io/topics/security#disabling-of-specific-commands
    ##
    disableCommands:
      - FLUSHDB
      - FLUSHALL
    ## @param replica.command Override default container command (useful when using custom images)
    ##
    command: []
    ## @param replica.args Override default container args (useful when using custom images)
    ##
    args: []
    ## @param replica.preExecCmds Additional commands to run prior to starting Redis(TM) replicas
    ##
    preExecCmds: []
    ## @param replica.extraFlags Array with additional command line flags for Redis(TM) replicas
    ## e.g:
    ## extraFlags:
    ##  - "--maxmemory-policy volatile-ttl"
    ##  - "--repl-backlog-size 1024mb"
    ##
    extraFlags: []
    ## @param replica.extraEnvVars Array with extra environment variables to add to Redis(TM) replicas nodes
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param replica.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Redis(TM) replicas nodes
    ##
    extraEnvVarsCM:
    ## @param replica.extraEnvVarsSecret Name of existing Secret containing extra env vars for Redis(TM) replicas nodes
    ##
    extraEnvVarsSecret:
    ## @param replica.containerPort Container port to open on Redis(TM) replicas nodes
    ##
    containerPort: 6379
    ## Configure extra options for Redis(TM) containers' liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param replica.livenessProbe.enabled Enable livenessProbe on Redis(TM) replicas nodes
    ## @param replica.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param replica.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param replica.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param replica.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param replica.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    ## @param replica.readinessProbe.enabled Enable readinessProbe on Redis(TM) replicas nodes
    ## @param replica.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param replica.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param replica.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param replica.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param replica.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 5
    ## @param replica.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param replica.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## Redis(TM) replicas resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param replica.resources.limits The resources limits for the Redis(TM) replicas containers
    ## @param replica.resources.requests The requested resources for the Redis(TM) replicas containers
    ##
    resources:
      limits: {}
      requests: {}
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param replica.podSecurityContext.enabled Enabled Redis(TM) replicas pods' Security Context
    ## @param replica.podSecurityContext.fsGroup Set Redis(TM) replicas pod's Security Context fsGroup
    ##
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param replica.containerSecurityContext.enabled Enabled Redis(TM) replicas containers' Security Context
    ## @param replica.containerSecurityContext.runAsUser Set Redis(TM) replicas containers' Security Context runAsUser
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
    ## @param replica.schedulerName Alternate scheduler for Redis(TM) replicas pods
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName:
    ## @param replica.updateStrategy.type Redis(TM) replicas statefulset strategy type
    ## @skip replica.updateStrategy.rollingUpdate
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    ##
    updateStrategy:
      ## StrategyType
      ## Can be set to RollingUpdate or OnDelete
      ##
      type: RollingUpdate
      rollingUpdate: {}
    ## @param replica.priorityClassName Redis(TM) replicas pods' priorityClassName
    ##
    priorityClassName: ""
    ## @param replica.hostAliases Redis(TM) replicas pods host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []
    ## @param replica.podLabels Extra labels for Redis(TM) replicas pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param replica.podAnnotations Annotations for Redis(TM) replicas pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param replica.shareProcessNamespace Share a single process namespace between all of the containers in Redis(TM) replicas pods
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/share-process-namespace/
    ##
    shareProcessNamespace: false
    ## @param replica.podAffinityPreset Pod affinity preset. Ignored if `replica.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param replica.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `replica.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param replica.nodeAffinityPreset.type Node affinity preset type. Ignored if `replica.affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param replica.nodeAffinityPreset.key Node label key to match. Ignored if `replica.affinity` is set
      ##
      key: ""
      ## @param replica.nodeAffinityPreset.values Node label values to match. Ignored if `replica.affinity` is set
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param replica.affinity Affinity for Redis(TM) replicas pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## NOTE: `replica.podAffinityPreset`, `replica.podAntiAffinityPreset`, and `replica.nodeAffinityPreset` will be ignored when it's set
    ##
    affinity: {}
    ## @param replica.nodeSelector Node labels for Redis(TM) replicas pods assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}
    ## @param replica.tolerations Tolerations for Redis(TM) replicas pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## @param replica.spreadConstraints Spread Constraints for Redis(TM) replicas pod assignment
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    ## E.g.
    ## spreadConstraints:
    ##   - maxSkew: 1
    ##     topologyKey: node
    ##     whenUnsatisfiable: DoNotSchedule
    ##
    spreadConstraints: {}
    ## @param replica.lifecycleHooks for the Redis(TM) replica container(s) to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## @param replica.extraVolumes Optionally specify extra list of additional volumes for the Redis(TM) replicas pod(s)
    ##
    extraVolumes: []
    ## @param replica.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Redis(TM) replicas container(s)
    ##
    extraVolumeMounts: []
    ## @param replica.sidecars Add additional sidecar containers to the Redis(TM) replicas pod(s)
    ## e.g:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: {}
    ## @param replica.initContainers Add additional init containers to the Redis(TM) replicas pod(s)
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
    ## e.g:
    ## initContainers:
    ##  - name: your-image-name
    ##    image: your-image
    ##    imagePullPolicy: Always
    ##    command: ['sh', '-c', 'echo "hello world"']
    ##
    initContainers: {}
    ## Persistence Parameters
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      ## @param replica.persistence.enabled Enable persistence on Redis(TM) replicas nodes using Persistent Volume Claims
      ##
      enabled: true
      ## @param replica.persistence.path The path the volume will be mounted at on Redis(TM) replicas containers
      ## NOTE: Useful when using different Redis(TM) images
      ##
      path: /data
      ## @param replica.persistence.subPath The subdirectory of the volume to mount on Redis(TM) replicas containers
      ## NOTE: Useful in dev environments
      ##
      subPath: ""
      ## @param replica.persistence.storageClass Persistent Volume storage class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
      ##
      storageClass:
      ## @param replica.persistence.accessModes [array] Persistent Volume access modes
      ##
      accessModes:
        - ReadWriteOnce
      ## @param replica.persistence.size Persistent Volume size
      ##
      size: 8Gi
      ## @param replica.persistence.annotations Additional custom annotations for the PVC
      ##
      annotations: {}
      ## @param replica.persistence.selector Additional labels to match for the PVC
      ## e.g:
      ## selector:
      ##   matchLabels:
      ##     app: my-app
      ##
      selector: {}
    ## Redis(TM) replicas service parameters
    ##
    service:
      ## @param replica.service.type Redis(TM) replicas service type
      ##
      type: ClusterIP
      ## @param replica.service.port Redis(TM) replicas service port
      ##
      port: 6379
      ## @param replica.service.nodePort Node port for Redis(TM) replicas
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ## NOTE: choose port between <30000-32767>
      ##
      nodePort:
      ## @param replica.service.externalTrafficPolicy Redis(TM) replicas service external traffic policy
      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster
      ## @param replica.service.clusterIP Redis(TM) replicas service Cluster IP
      ##
      clusterIP:
      ## @param replica.service.loadBalancerIP Redis(TM) replicas service Load Balancer IP
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      loadBalancerIP:
      ## @param replica.service.loadBalancerSourceRanges Redis(TM) replicas service Load Balancer sources
      ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## e.g.
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param replica.service.annotations Additional custom annotations for Redis(TM) replicas service
      ##
      annotations: {}
    ## @param replica.terminationGracePeriodSeconds Integer setting the termination grace period for the redis-replicas pods
    ##
    terminationGracePeriodSeconds: 30

## @section Redis(TM) Sentinel configuration parameters

  sentinel:
    ## @param sentinel.enabled Use Redis(TM) Sentinel on Redis(TM) pods.
    ## IMPORTANT: this will disable the master and replicas services and
    ## create a single Redis(TM) service exposing both the Redis and Sentinel ports
    ##
    enabled: false
    ## Bitnami Redis(TM) Sentinel image version
    ## ref: https://hub.docker.com/r/bitnami/redis-sentinel/tags/
    ## @param sentinel.image.registry Redis(TM) Sentinel image registry
    ## @param sentinel.image.repository Redis(TM) Sentinel image repository
    ## @param sentinel.image.tag Redis(TM) Sentinel image tag (immutable tags are recommended)
    ## @param sentinel.image.pullPolicy Redis(TM) Sentinel image pull policy
    ## @param sentinel.image.pullSecrets Redis(TM) Sentinel image pull secrets
    ## @param sentinel.image.debug Enable image debug mode
    ##
    image:
      registry: docker.io
      repository: bitnami/redis-sentinel
      tag: 6.2.3-debian-10-r20
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
      ## Enable debug mode
      ##
      debug: false
    ## @param sentinel.masterSet Master set name
    ##
    masterSet: mymaster
    ## @param sentinel.quorum Sentinel Quorum
    ##
    quorum: 2
    ## Sentinel timing restrictions
    ## @param sentinel.downAfterMilliseconds Timeout for detecting a Redis(TM) node is down
    ## @param sentinel.failoverTimeout Timeout for performing a election failover
    ## @param sentinel.cleanDelaySeconds Delay seconds when cleaning nodes IPs
    #
    downAfterMilliseconds: 60000
    failoverTimeout: 18000
    cleanDelaySeconds: 5
    ## @param sentinel.parallelSyncs Number of replicas that can be reconfigured in parallel to use the new master after a failover
    ##
    parallelSyncs: 1
    ## @param sentinel.staticID Enable static Sentinel IDs for each replica
    ## If disabled each sentinel will generate a random id at startup
    ## If enabled, each replicas will have a constant ID on each start-up
    ##
    staticID: false
    ## @param sentinel.configuration Configuration for Redis(TM) Sentinel nodes
    ## ref: https://redis.io/topics/sentinel
    ##
    configuration:
    ## @param sentinel.command Override default container command (useful when using custom images)
    ##
    command: []
    ## @param sentinel.args Override default container args (useful when using custom images)
    ##
    args: []
    ## @param sentinel.preExecCmds Additional commands to run prior to starting Redis(TM) Sentinel
    ##
    preExecCmds: []
    ## @param sentinel.containerPort Container port to open on Redis(TM) Sentinel nodes
    ##
    containerPort: 26379
    ## Configure extra options for Redis(TM) containers' liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param sentinel.livenessProbe.enabled Enable livenessProbe on Redis(TM) Sentinel nodes
    ## @param sentinel.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param sentinel.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param sentinel.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param sentinel.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param sentinel.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    ## @param sentinel.readinessProbe.enabled Enable readinessProbe on Redis(TM) Sentinel nodes
    ## @param sentinel.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param sentinel.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param sentinel.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param sentinel.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param sentinel.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 5
    ## @param sentinel.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param sentinel.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## Redis(TM) Sentinel resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param sentinel.resources.limits The resources limits for the Redis(TM) Sentinel containers
    ## @param sentinel.resources.requests The requested resources for the Redis(TM) Sentinel containers
    ##
    resources:
      limits: {}
      requests: {}
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param sentinel.containerSecurityContext.enabled Enabled Redis(TM) Sentinel containers' Security Context
    ## @param sentinel.containerSecurityContext.runAsUser Set Redis(TM) Sentinel containers' Security Context runAsUser
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
    ## @param sentinel.lifecycleHooks for the Redis(TM) sentinel container(s) to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## @param sentinel.extraVolumes Optionally specify extra list of additional volumes for the Redis(TM) Sentinel
    ##
    extraVolumes: []
    ## @param sentinel.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Redis(TM) Sentinel container(s)
    ##
    extraVolumeMounts: []
    ## Redis(TM) Sentinel service parameters
    ##
    service:
      ## @param sentinel.service.type Redis(TM) Sentinel service type
      ##
      type: ClusterIP
      ## @param sentinel.service.port Redis(TM) service port for Redis(TM)
      ##
      port: 6379
      ## @param sentinel.service.sentinelPort Redis(TM) service port for Sentinel
      ##
      sentinelPort: 26379
      ## @param sentinel.service.nodePorts.redis Node port for Redis(TM)
      ## @param sentinel.service.nodePorts.sentinel Node port for Sentinel
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ## NOTE: choose port between <30000-32767>
      ##
      nodePorts:
        redis:
        sentinel:
      ## @param sentinel.service.externalTrafficPolicy Redis(TM) Sentinel service external traffic policy
      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster
      ## @param sentinel.service.clusterIP Redis(TM) Sentinel service Cluster IP
      ##
      clusterIP:
      ## @param sentinel.service.loadBalancerIP Redis(TM) Sentinel service Load Balancer IP
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      loadBalancerIP:
      ## @param sentinel.service.loadBalancerSourceRanges Redis(TM) Sentinel service Load Balancer sources
      ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## e.g.
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param sentinel.service.annotations Additional custom annotations for Redis(TM) Sentinel service
      ##
      annotations: {}
    ## @param sentinel.terminationGracePeriodSeconds Integer setting the termination grace period for the redis-node pods
    ##
    terminationGracePeriodSeconds: 30

  ## @section Other Parameters

  ## Network Policy configuration
  ## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param networkPolicy.enabled Enable creation of NetworkPolicy resources
    ##
    enabled: false
    ## @param networkPolicy.allowExternal Don't require client label for connections
    ## When set to false, only pods with the correct client label will have network access to the ports
    ## Redis(TM) is listening on. When true, Redis(TM) will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true
    ## @param networkPolicy.extraIngress Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraIngress: []
    ## @param networkPolicy.extraEgress Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param networkPolicy.ingressNSMatchLabels Labels to match to allow traffic from other namespaces
    ## @param networkPolicy.ingressNSPodMatchLabels Pod labels to match to allow traffic from other namespaces
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}
  ## PodSecurityPolicy configuration
  ## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
  ##
  podSecurityPolicy:
    ## @param podSecurityPolicy.create Specifies whether a PodSecurityPolicy should be created (set `podSecurityPolicy.enabled` to `true` to enable it)
    ##
    create: false
    ## @param podSecurityPolicy.enable Enable PodSecurityPolicy
    ##
    enabled: false
  ## RBAC configuration
  ##
  rbac:
    ## @param rbac.create Specifies whether RBAC resources should be created
    ##
    create: false
    ## @param rbac.rules Custom RBAC rules to set
    ## e.g:
    ## rules:
    ##   - apiGroups:
    ##       - ""
    ##     resources:
    ##       - pods
    ##     verbs:
    ##       - get
    ##       - list
    ##
    rules: []
  ## ServiceAccount configuration
  ##
  serviceAccount:
    ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
    ##
    annotations: {}
  ## Redis(TM) Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  pdb:
    ## @param pdb.create Specifies whether a ServiceAccount should be created
    ##
    create: false
    ## @param pdb.minAvailable Min number of pods that must still be available after the eviction
    ##
    minAvailable: 1
    ## @param pdb.maxUnavailable Max number of pods that can be unavailable after the eviction
    ##
    maxUnavailable:
  ## TLS configuration
  ##
  tls:
    ## @param tls.enabled Enable TLS traffic
    ##
    enabled: false
    ## @param tls.authClients Require clients to authenticate
    ##
    authClients: true
    ## @param tls.certificatesSecret Then name of the existing secret that contains the TLS certificates
    ##
    certificatesSecret:
    ## @param tls.certFilename Certificate filename
    ##
    certFilename:
    ## @param tls.certKeyFilename Certificate Key filename
    ##
    certKeyFilename:
    ## @param tls.certCAFilename CA Certificate filename
    ##
    certCAFilename:
    ## @param tls.dhParamsFilename File containing DH params (in order to support DH based ciphers)
    ##
    dhParamsFilename:

  ## @section Metrics Parameters

  metrics:
    ## @param metrics.enabled Start a sidecar prometheus exporter to expose Redis(TM) metrics
    ##
    enabled: false
    ## Bitnami Redis(TM) Exporter image
    ## ref: https://hub.docker.com/r/bitnami/redis-exporter/tags/
    ## @param metrics.image.registry Redis(TM) Exporter image registry
    ## @param metrics.image.repository Redis(TM) Exporter image repository
    ## @param metrics.image.tag Redis(TM) Redis(TM) Exporter image tag (immutable tags are recommended)
    ## @param metrics.image.pullPolicy Redis(TM) Exporter image pull policy
    ## @param metrics.image.pullSecrets Redis(TM) Exporter image pull secrets
    ##
    image:
      registry: docker.io
      repository: bitnami/redis-exporter
      tag: 1.23.1-debian-10-r19
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    ## @param metrics.redisTargetHost A way to specify an alternative Redis(TM) hostname
    ## Useful for certificate CN/SAN matching
    ##
    redisTargetHost: "localhost"
    ## @param metrics.extraArgs Extra arguments for Redis(TM) exporter, for example:
    ## e.g.:
    ## extraArgs:
    ##   check-keys: myKey,myOtherKey
    ##
    extraArgs: {}
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param metrics.containerSecurityContext.enabled Enabled Redis(TM) exporter containers' Security Context
    ## @param metrics.containerSecurityContext.runAsUser Set Redis(TM) exporter containers' Security Context runAsUser
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
    ## Redis(TM) exporter resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param metrics.resources.limits The resources limits for the Redis(TM) exporter container
    ## @param metrics.resources.requests The requested resources for the Redis(TM) exporter container
    ##
    resources:
      limits: {}
      requests: {}
    ## @param metrics.podLabels Extra labels for Redis(TM) exporter pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param metrics.podAnnotations [object] Annotations for Redis(TM) exporter pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9121"
    ## Redis(TM) exporter service parameters
    ##
    service:
      ## @param metrics.service.type Redis(TM) exporter service type
      ##
      type: ClusterIP
      ## @param metrics.service.port Redis(TM) exporter service port
      ##
      port: 9121
      ## @param metrics.service.externalTrafficPolicy Redis(TM) exporter service external traffic policy
      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster
      ## @param metrics.service.loadBalancerIP Redis(TM) exporter service Load Balancer IP
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      loadBalancerIP: ""
      ## @param metrics.service.loadBalancerSourceRanges Redis(TM) exporter service Load Balancer sources
      ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## e.g.
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param metrics.service.annotations Additional custom annotations for Redis(TM) exporter service
      ##
      annotations: {}
    ## Redis(TM) Sentinel Exporter
    ##
    sentinel:
      ## @param metrics.sentinel.enabled Start a sidecar prometheus exporter to expose Redis(TM) Sentinel metrics
      ##
      enabled: false
      ## Bitnami Redis(TM) Sentinel Exporter image
      ## ref: https://hub.docker.com/r/bitnami/redis-sentinel-exporter/tags/
      ## @param metrics.sentinel.image.registry Redis(TM) Sentinel Exporter image registry
      ## @param metrics.sentinel.image.repository Redis(TM) Sentinel Exporter image repository
      ## @param metrics.sentinel.image.tag Redis(TM) Redis(TM) Sentinel Exporter image tag (immutable tags are recommended)
      ## @param metrics.sentinel.image.pullPolicy Redis(TM) Sentinel Exporter image pull policy
      ## @param metrics.sentinel.image.pullSecrets Redis(TM) Sentinel Exporter image pull secrets
      ##
      image:
        registry: docker.io
        repository: bitnami/redis-sentinel-exporter
        tag: 1.7.1-debian-10-r148
        pullPolicy: IfNotPresent
        ## Optionally specify an array of imagePullSecrets.
        ## Secrets must be manually created in the namespace.
        ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
        ## e.g:
        ## pullSecrets:
        ##   - myRegistryKeySecretName
        ##
        pullSecrets: []
      ## @param metrics.sentinel.extraArgs Extra arguments for Redis(TM) Sentinel exporter, for example:
      ## e.g.:
      ## extraArgs:
      ##   check-keys: myKey,myOtherKey
      ##
      extraArgs: {}
      ## Configure Container Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      ## @param metrics.sentinel.containerSecurityContext.enabled Enabled Redis(TM) Sentinel exporter containers' Security Context
      ## @param metrics.sentinel.containerSecurityContext.runAsUser Set Redis(TM) Sentinel exporter containers' Security Context runAsUser
      ##
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
      ## Redis(TM) Sentinel exporter resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ## @param metrics.sentinel.resources.limits The resources limits for the Redis(TM) Sentinel exporter container
      ## @param metrics.sentinel.resources.requests The requested resources for the Redis(TM) Sentinel exporter container
      ##
      resources:
        limits: {}
        requests: {}
      ## Redis(TM) Sentinel exporter service parameters
      ##
      service:
        ## @param metrics.sentinel.service.type Redis(TM) Sentinel exporter service type
        ##
        type: ClusterIP
        ## @param metrics.sentinel.service.port Redis(TM) Sentinel exporter service port
        ##
        port: 9355
        ## @param metrics.sentinel.service.externalTrafficPolicy Redis(TM) Sentinel exporter service external traffic policy
        ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
        ##
        externalTrafficPolicy: Cluster
        ## @param metrics.sentinel.service.loadBalancerIP Redis(TM) Sentinel exporter service Load Balancer IP
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
        ##
        loadBalancerIP: ""
        ## @param metrics.sentinel.service.loadBalancerSourceRanges Redis(TM) Sentinel exporter service Load Balancer sources
        ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
        ## e.g.
        ## loadBalancerSourceRanges:
        ##   - 10.10.10.0/24
        ##
        loadBalancerSourceRanges: []
        ## @param metrics.sentinel.service.annotations Additional custom annotations for Redis(TM) Sentinel exporter service
        ##
        annotations: {}
    ## Prometheus Service Monitor
    ## ref: https://github.com/coreos/prometheus-operator
    ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    serviceMonitor:
      ## @param metrics.serviceMonitor.enabled Create ServiceMonitor resource(s) for scraping metrics using PrometheusOperator
      ##
      enabled: false
      ## @param metrics.serviceMonitor.namespace The namespace in which the ServiceMonitor will be created
      ##
      namespace:
      ## @param metrics.serviceMonitor.interval The interval at which metrics should be scraped
      ##
      interval: 30s
      ## @param metrics.serviceMonitor.scrapeTimeout The timeout after which the scrape is ended
      ##
      scrapeTimeout:
      ## @param metrics.serviceMonitor.relabellings Metrics relabellings to add to the scrape endpoint
      ##
      relabellings: []
      ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
      ##
      honorLabels: false
      ## @param metrics.serviceMonitor.additionalLabels Additional labels that can be used so ServiceMonitor resource(s) can be discovered by Prometheus
      ##
      additionalLabels: {}
    ## Custom PrometheusRule to be defined
    ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
    ##
    prometheusRule:
      ## @param metrics.prometheusRule.enabled Create a custom prometheusRule Resource for scraping metrics using PrometheusOperator
      ##
      enabled: false
      ## @param metrics.prometheusRule.namespace The namespace in which the prometheusRule will be created
      ##
      namespace:
      ## @param metrics.prometheusRule.additionalLabels Additional labels for the prometheusRule
      ##
      additionalLabels: {}
      ## @param metrics.prometheusRule.rules Custom Prometheus rules
      ## e.g:
      ## rules:
      ##   - alert: RedisDown
      ##     expr: redis_up{service="{{ template "common.names.fullname" . }}-metrics"} == 0
      ##     for: 2m
      ##     labels:
      ##       severity: error
      ##     annotations:
      ##       summary: Redis(TM) instance {{ "{{ $labels.instance }}" }} down
      ##       description: Redis(TM) instance {{ "{{ $labels.instance }}" }} is down
      ##    - alert: RedisMemoryHigh
      ##      expr: >
      ##        redis_memory_used_bytes{service="{{ template "common.names.fullname" . }}-metrics"} * 100
      ##        /
      ##        redis_memory_max_bytes{service="{{ template "common.names.fullname" . }}-metrics"}
      ##        > 90
      ##      for: 2m
      ##      labels:
      ##        severity: error
      ##      annotations:
      ##        summary: Redis(TM) instance {{ "{{ $labels.instance }}" }} is using too much memory
      ##        description: |
      ##          Redis(TM) instance {{ "{{ $labels.instance }}" }} is using {{ "{{ $value }}" }}% of its available memory.
      ##    - alert: RedisKeyEviction
      ##      expr: |
      ##        increase(redis_evicted_keys_total{service="{{ template "common.names.fullname" . }}-metrics"}[5m]) > 0
      ##      for: 1s
      ##      labels:
      ##        severity: error
      ##      annotations:
      ##        summary: Redis(TM) instance {{ "{{ $labels.instance }}" }} has evicted keys
      ##        description: |
      ##          Redis(TM) instance {{ "{{ $labels.instance }}" }} has evicted {{ "{{ $value }}" }} keys in the last 5 minutes.
      ##
      rules: []

  ## @section Init Container Parameters

  ## 'volumePermissions' init container parameters
  ## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
  ##   based on the *podSecurityContext/*containerSecurityContext parameters
  ##
  volumePermissions:
    ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
    ##
    enabled: false
    ## Bitnami Shell image
    ## ref: https://hub.docker.com/r/bitnami/bitnami-shell/tags/
    ## @param volumePermissions.image.registry Bitnami Shell image registry
    ## @param volumePermissions.image.repository Bitnami Shell image repository
    ## @param volumePermissions.image.tag Bitnami Shell image tag (immutable tags are recommended)
    ## @param volumePermissions.image.pullPolicy Bitnami Shell image pull policy
    ## @param volumePermissions.image.pullSecrets Bitnami Shell image pull secrets
    ##
    image:
      registry: docker.io
      repository: bitnami/bitnami-shell
      tag: 10-debian-10-r92
      pullPolicy: Always
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    ## Init container's resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param volumePermissions.resources.limits The resources limits for the init container
    ## @param volumePermissions.resources.requests The requested resources for the init container
    ##
    resources:
      limits: {}
      requests: {}
    ## Init container Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
    ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
    ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
    ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
    ##
    containerSecurityContext:
      runAsUser: 0

  ## init-sysctl container parameters
  ## used to perform sysctl operation to modify Kernel settings (needed sometimes to avoid warnings)
  ##
  sysctl:
    ## @param sysctl.enabled Enable init container to modify Kernel settings
    ##
    enabled: false
    ## Bitnami Shell image
    ## ref: https://hub.docker.com/r/bitnami/bitnami-shell/tags/
    ## @param sysctl.image.registry Bitnami Shell image registry
    ## @param sysctl.image.repository Bitnami Shell image repository
    ## @param sysctl.image.tag Bitnami Shell image tag (immutable tags are recommended)
    ## @param sysctl.image.pullPolicy Bitnami Shell image pull policy
    ## @param sysctl.image.pullSecrets Bitnami Shell image pull secrets
    ##
    image:
      registry: docker.io
      repository: bitnami/bitnami-shell
      tag: 10-debian-10-r92
      pullPolicy: Always
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    ## @param sysctl.command Override default init-sysctl container command (useful when using custom images)
    ##
    command: []
    ## @param sysctl.mountHostSys Mount the host `/sys` folder to `/host-sys`
    ##
    mountHostSys: false
    ## Init container's resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param sysctl.resources.limits The resources limits for the init container
    ## @param sysctl.resources.requests The requested resources for the init container
    ##
    resources:
      limits: {}
      requests: {}
